name: Rust

on:
  workflow_dispatch:
  push:
    tags:
      '**'

env:
  CARGO_TERM_COLOR: always
  CLIENT_DLL_NAME: dvd

jobs:
  build-lib:
    name: Build DLL
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3
    - uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    - uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: stable
    - name: Build Step
      run: |
        cargo build --release
    - name: Upload Library
      uses: actions/upload-artifact@v3
      with:
        name: ${{ env.CLIENT_DLL_NAME }}.dll
        path: target\release\${{ env.CLIENT_DLL_NAME }}.dll

  release:
    name: Release Binaries
    runs-on: ubuntu-latest
    needs: [build-lib]
    if: ${{ startsWith(github.event.ref, 'refs/tags/') }}
    steps:
    - uses: actions/download-artifact@master
      with:
        name: ${{ env.CLIENT_DLL_NAME }}.dll
        path: .
    - name: Release Dll
      uses: softprops/action-gh-release@v1
      with:
        files: |
          ${{ env.CLIENT_DLL_NAME }}.dll
